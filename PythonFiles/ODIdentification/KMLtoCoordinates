from pykml import parser
import csv
from Objects import Coordinate

def match():
    noRegion = []

    with open("DCGrid.csv", 'r') as file:

        reader = csv.reader(file)

        count = 0
        for line in reader:
            if str(line[0]).__contains__("a") is False:
                c = Coordinate.Coordinate(float(line[0]), float(line[1]))
                noRegion.append(c)

    file.close()

    with open("NOVAGrid.csv", 'r') as file:
        reader = csv.reader(file)

        count = 0
        for line in reader:
            if str(line[0]).__contains__("a") is False:
                c = Coordinate.Coordinate(float(line[0]), float(line[1]))
                noRegion.append(c)

    file.close()

    yesRegion = []
    yesRegionCount = 0
    with open("GridToRegion.csv", 'r', newline='') as file:
        reader = csv.reader(file)

        count = 0
        for line in reader:
            if str(line[0]).__contains__("a") is False:
                c = Coordinate.Coordinate(float(line[0]), float(line[1]))
                yesRegion.append(c)
                yesRegionCount += 1

    file.close()

    found = 0
    for a in yesRegion:

        for b in noRegion:

            tol = 8

            alat = float(str(a.getLat())[:tol])
            along = float(str(a.getLong())[:tol])
            blat = float(str(b.getLat())[:tol])
            blong = float(str(b.getLong())[:tol])

            if alat == blat:

                if along == blong:
                    found += 1
                    break

    print("with region: " + str(yesRegion.__len__()))
    print("found: " + str(found))
    print("not found: " + str(yesRegion.__len__() - found))


coors = []
with open("(NOVA) OD Map by Region.kml", 'r') as file:

    doc = parser.parse(file).getroot().Document

    for folder in doc.Folder:

        folderName = str(folder.name)
        pointCount = 0

        if folderName.__contains__("Nodes"):

            for placemark in folder.Placemark:
                pointCount += 1

                c = placemark.Point.coordinates
                c = str(c).strip().split(",")

                coor = [c[1], c[0], folderName[7:folderName.__len__() - 6], "NOVA"]
                coors.append(coor)

file.close()

with open("(DC) OD Map by Region.kml", 'r') as file:

    doc = parser.parse(file).getroot().Document

    for folder in doc.Folder:

        folderName = str(folder.name)
        pointCount = 0

        if folderName.__contains__("Nodes"):

            for placemark in folder.Placemark:
                pointCount += 1

                c = placemark.Point.coordinates
                c = str(c).strip().split(",")

                coor = [c[1], c[0], folderName[:folderName.__len__() - 6], "DC"]
                coors.append(coor)

file.close()

with open("GridToRegion.csv", 'w', newline='') as file:

    writer = csv.writer(file)

    writer.writerow(["Lat", "Long", "Region", "Grid"])

    writer.writerows(coors)
file.close()


# end of file

